// vulnerability_detector.rs

use reqwest::Error;
use prettytable::{Table, row};
use serde::Deserialize;

#[derive(Deserialize)]
struct Vulnerability {
    id: String,
    description: String,
    severity: String,
}

#[tokio::main]
async fn main() -> Result<(), Error> {
    let response = reqwest::get("https://api.mock.com/vulnerabilities?ip=192.168.1.1") // Replace with actual API URL
        .await?
        .json::<Vec<Vulnerability>>()
        .await?;

    let mut table = Table::new();
    table.add_row(row!["Vulnerability ID", "Description", "Severity"]);

    for vuln in response {
        table.add_row(row![vuln.id, vuln.description, vuln.severity]);
    }

    table.printstd();
    Ok(())
}